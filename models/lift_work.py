# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LiftWork(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, lift_work_description: str=None, lift_work_id: str=None, lift_work_start_time: str=None, lift_work_stop_time: str=None, lift_work_location_id: str=None, lift_load_center: float=None, lift_work_weight: float=None):  # noqa: E501
        """LiftWork - a model defined in Swagger

        :param code: The code of this LiftWork.  # noqa: E501
        :type code: int
        :param lift_work_description: The lift_work_description of this LiftWork.  # noqa: E501
        :type lift_work_description: str
        :param lift_work_id: The lift_work_id of this LiftWork.  # noqa: E501
        :type lift_work_id: str
        :param lift_work_start_time: The lift_work_start_time of this LiftWork.  # noqa: E501
        :type lift_work_start_time: str
        :param lift_work_stop_time: The lift_work_stop_time of this LiftWork.  # noqa: E501
        :type lift_work_stop_time: str
        :param lift_work_location_id: The lift_work_location_id of this LiftWork.  # noqa: E501
        :type lift_work_location_id: str
        :param lift_load_center: The lift_load_center of this LiftWork.  # noqa: E501
        :type lift_load_center: float
        :param lift_work_weight: The lift_work_weight of this LiftWork.  # noqa: E501
        :type lift_work_weight: float
        """
        self.swagger_types = {
            'code': int,
            'lift_work_description': str,
            'lift_work_id': str,
            'lift_work_start_time': str,
            'lift_work_stop_time': str,
            'lift_work_location_id': str,
            'lift_load_center': float,
            'lift_work_weight': float
        }

        self.attribute_map = {
            'code': 'code',
            'lift_work_description': 'LiftWorkDescription',
            'lift_work_id': 'LiftWorkId',
            'lift_work_start_time': 'LiftWorkStartTime',
            'lift_work_stop_time': 'LiftWorkStopTime',
            'lift_work_location_id': 'LiftWorkLocationId',
            'lift_load_center': 'LiftLoadCenter',
            'lift_work_weight': 'LiftWorkWeight'
        }

        self._code = code
        self._lift_work_description = lift_work_description
        self._lift_work_id = lift_work_id
        self._lift_work_start_time = lift_work_start_time
        self._lift_work_stop_time = lift_work_stop_time
        self._lift_work_location_id = lift_work_location_id
        self._lift_load_center = lift_load_center
        self._lift_work_weight = lift_work_weight

    @classmethod
    def from_dict(cls, dikt) -> 'LiftWork':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LiftWork of this LiftWork.  # noqa: E501
        :rtype: LiftWork
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> int:
        """Gets the code of this LiftWork.


        :return: The code of this LiftWork.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this LiftWork.


        :param code: The code of this LiftWork.
        :type code: int
        """

        self._code = code

    @property
    def lift_work_description(self) -> str:
        """Gets the lift_work_description of this LiftWork.


        :return: The lift_work_description of this LiftWork.
        :rtype: str
        """
        return self._lift_work_description

    @lift_work_description.setter
    def lift_work_description(self, lift_work_description: str):
        """Sets the lift_work_description of this LiftWork.


        :param lift_work_description: The lift_work_description of this LiftWork.
        :type lift_work_description: str
        """

        self._lift_work_description = lift_work_description

    @property
    def lift_work_id(self) -> str:
        """Gets the lift_work_id of this LiftWork.


        :return: The lift_work_id of this LiftWork.
        :rtype: str
        """
        return self._lift_work_id

    @lift_work_id.setter
    def lift_work_id(self, lift_work_id: str):
        """Sets the lift_work_id of this LiftWork.


        :param lift_work_id: The lift_work_id of this LiftWork.
        :type lift_work_id: str
        """

        self._lift_work_id = lift_work_id

    @property
    def lift_work_start_time(self) -> str:
        """Gets the lift_work_start_time of this LiftWork.


        :return: The lift_work_start_time of this LiftWork.
        :rtype: str
        """
        return self._lift_work_start_time

    @lift_work_start_time.setter
    def lift_work_start_time(self, lift_work_start_time: str):
        """Sets the lift_work_start_time of this LiftWork.


        :param lift_work_start_time: The lift_work_start_time of this LiftWork.
        :type lift_work_start_time: str
        """

        self._lift_work_start_time = lift_work_start_time

    @property
    def lift_work_stop_time(self) -> str:
        """Gets the lift_work_stop_time of this LiftWork.


        :return: The lift_work_stop_time of this LiftWork.
        :rtype: str
        """
        return self._lift_work_stop_time

    @lift_work_stop_time.setter
    def lift_work_stop_time(self, lift_work_stop_time: str):
        """Sets the lift_work_stop_time of this LiftWork.


        :param lift_work_stop_time: The lift_work_stop_time of this LiftWork.
        :type lift_work_stop_time: str
        """

        self._lift_work_stop_time = lift_work_stop_time

    @property
    def lift_work_location_id(self) -> str:
        """Gets the lift_work_location_id of this LiftWork.


        :return: The lift_work_location_id of this LiftWork.
        :rtype: str
        """
        return self._lift_work_location_id

    @lift_work_location_id.setter
    def lift_work_location_id(self, lift_work_location_id: str):
        """Sets the lift_work_location_id of this LiftWork.


        :param lift_work_location_id: The lift_work_location_id of this LiftWork.
        :type lift_work_location_id: str
        """

        self._lift_work_location_id = lift_work_location_id

    @property
    def lift_load_center(self) -> float:
        """Gets the lift_load_center of this LiftWork.


        :return: The lift_load_center of this LiftWork.
        :rtype: float
        """
        return self._lift_load_center

    @lift_load_center.setter
    def lift_load_center(self, lift_load_center: float):
        """Sets the lift_load_center of this LiftWork.


        :param lift_load_center: The lift_load_center of this LiftWork.
        :type lift_load_center: float
        """

        self._lift_load_center = lift_load_center

    @property
    def lift_work_weight(self) -> float:
        """Gets the lift_work_weight of this LiftWork.


        :return: The lift_work_weight of this LiftWork.
        :rtype: float
        """
        return self._lift_work_weight

    @lift_work_weight.setter
    def lift_work_weight(self, lift_work_weight: float):
        """Sets the lift_work_weight of this LiftWork.


        :param lift_work_weight: The lift_work_weight of this LiftWork.
        :type lift_work_weight: float
        """

        self._lift_work_weight = lift_work_weight
