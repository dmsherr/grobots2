# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Err(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, message: str=None, fields: str=None):  # noqa: E501
        """Err - a model defined in Swagger

        :param code: The code of this Err.  # noqa: E501
        :type code: int
        :param message: The message of this Err.  # noqa: E501
        :type message: str
        :param fields: The fields of this Err.  # noqa: E501
        :type fields: str
        """
        self.swagger_types = {
            'code': int,
            'message': str,
            'fields': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'fields': 'fields'
        }

        self._code = code
        self._message = message
        self._fields = fields

    @classmethod
    def from_dict(cls, dikt) -> 'Err':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The err of this Err.  # noqa: E501
        :rtype: Err
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> int:
        """Gets the code of this Err.


        :return: The code of this Err.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this Err.


        :param code: The code of this Err.
        :type code: int
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this Err.


        :return: The message of this Err.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Err.


        :param message: The message of this Err.
        :type message: str
        """

        self._message = message

    @property
    def fields(self) -> str:
        """Gets the fields of this Err.


        :return: The fields of this Err.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields: str):
        """Sets the fields of this Err.


        :param fields: The fields of this Err.
        :type fields: str
        """

        self._fields = fields
